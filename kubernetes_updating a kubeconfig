adding, and modifying kube config entries


To add another cluster, use the kubectl config set-cluster command:
  
```
# add cluster to kubeconfig

export cluster_name="cluster_name"
export api_server_endpoint="https://api_server_endpoint.us-east-1.eks.amazonaws.com"
export certificate_authority_data="certificate_authority_data=="
export cluster_iam_arn="cluster_iam_arn"



   kubectl config set-cluster $cluster_name --server=$api_server_endpoint
   
  # add cluster certificate to kubeconfig

echo $certificate_authority_data \ > $cluster_name.pem
kubectl config set clusters.$cluster_name.certificate-authority-data $(< $cluster_name.pem)
   
# add credentials for cluster to kubeconfig
kubectl config set-credentials $cluster_name-user --auth-provider=azure \
    --auth-provider-arg=apiserver-id=22f9d484-b818-4b21-a278-00b264446505 \
    --auth-provider-arg=client-id=22f9d484-b818-4b21-a278-00b264446505 \
    --auth-provider-arg=environment=AzurePublicCloud \
    --auth-provider-arg=tenant-id=3ac94b33-9135-4821-9502-eafda6592a35
   
# add context for cluster
kubectl config set-context $cluster_name --cluster=$cluster_name --user=$cluster_name-user
   
# switch context to cluster
kubectl config use-context itx-cab-safereturnsus-staging

